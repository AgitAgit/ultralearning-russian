V_2025-06-23
STAGE 1
2025/06/23 => 2025/06/29
General plan:
An app that records a user's vocabulary and recommends the next read based on the
vocabulary of books.
General tasks:
-record a users vocabulary
-keep a record of books and their vocabulary. 
(make an array of the string then use set?)

build a server
1. write a basic express server, and get a hello world from postman DONE.
2. connect the server to mongodb and get some document. DONE.
2.1. Add a book module. DONE.
2.2. Add controller and routes to add and get books. DONE.
2.3. extract a string from a pdf file DONE.
2.4. extract the wordList from the string, and send only those to the db. DONE.
2.5. Add a vocabulary array to user and a route to add word/words to it. DONE.
3. write a string manipulation module to extract vocabulary. (Might be moved to the client later) DONE.
4. take a user and a book and compare percent of words known. DONE.
5. add option to remove word from user's vocab. DONE.

build a client
1. get ping from server DONE.
2. send a pdf to the server DONE.

-prevent duplicate words from being added to the user's vocab DONE.
-revert the words object so it's plain string. I can make it more complex in further versions if need be. DONE.

for the next version:
-add user authentication (oAuth? Auth0?)
-add word count for each word?
-add strength for each user word?
-?create an array of languages for each user. each language object 
has a name(the language) and a words array? (to reduce load on the db?)

FIRST STAGE DONE.

V_2025-06-23
STAGE 2 
2025/06/29 => ?

Create a flashcard system for the client.

SERVER
DONE-flashcard schema: {
    top:string,
    bottom:string,
    topLanguage:enum(allowed languages...)
    bottomLanguage:enum(allowed languages...)
}
DONE-create route to add flashcard and to get all flashcards
DONE-create a deck schema
DONE-add "create-deck","add-to-deck","remove-from-deck" routes in the flashcards route and controller


CLIENT
DONE-create login page and simple logged in user tracking DONE

DONE-navigate between pages using conditional rendering and the State center

DONE-move the server address to the state center

-create profile page with vocabulary

-Create a flashcard
-Store a flashcard
-display decks
-play and rank words by known/not known
-create some basic decks for russian => english and english => hebrew (100 cards per deck tops) (can use gemini to generate cards)
-allow users to add cards/decks
-add the option to upvote a deck
-add sort by votes


//last place:bookmark in the Login page

Possibilities:
-add origin language and target language choice to the header.
-add hebrew ui in addition to the english ui.